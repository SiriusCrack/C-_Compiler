Grammar

    0 $accept: input $end

    1 input: ε
    2      | '\n'

    3 $@1: ε

    4 input: NUMCONST $@1 input

    5 $@2: ε

    6 input: ID $@2 input

    7 $@3: ε

    8 input: CHARCONST $@3 input

    9 $@4: ε

   10 input: STRINGCONST $@4 input

   11 $@5: ε

   12 input: OPERAND $@5 input

   13 $@6: ε

   14 input: BOOLCONST $@6 input


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 2
    error (256)
    ID <tokenPtr> (258) 6
    NUMCONST <tokenPtr> (259) 4
    CHARCONST <tokenPtr> (260) 8
    STRINGCONST <tokenPtr> (261) 10
    OPERAND <tokenPtr> (262) 12
    BOOLCONST <tokenPtr> (263) 14


Nonterminals, with rules where they appear

    $accept (10)
        on left: 0
    input (11)
        on left: 1 2 4 6 8 10 12 14
        on right: 0 4 6 8 10 12 14
    $@1 (12)
        on left: 3
        on right: 4
    $@2 (13)
        on left: 5
        on right: 6
    $@3 (14)
        on left: 7
        on right: 8
    $@4 (15)
        on left: 9
        on right: 10
    $@5 (16)
        on left: 11
        on right: 12
    $@6 (17)
        on left: 13
        on right: 14


State 0

    0 $accept: • input $end

    ID           shift, and go to state 1
    NUMCONST     shift, and go to state 2
    CHARCONST    shift, and go to state 3
    STRINGCONST  shift, and go to state 4
    OPERAND      shift, and go to state 5
    BOOLCONST    shift, and go to state 6
    '\n'         shift, and go to state 7

    $default  reduce using rule 1 (input)

    input  go to state 8


State 1

    6 input: ID • $@2 input

    $default  reduce using rule 5 ($@2)

    $@2  go to state 9


State 2

    4 input: NUMCONST • $@1 input

    $default  reduce using rule 3 ($@1)

    $@1  go to state 10


State 3

    8 input: CHARCONST • $@3 input

    $default  reduce using rule 7 ($@3)

    $@3  go to state 11


State 4

   10 input: STRINGCONST • $@4 input

    $default  reduce using rule 9 ($@4)

    $@4  go to state 12


State 5

   12 input: OPERAND • $@5 input

    $default  reduce using rule 11 ($@5)

    $@5  go to state 13


State 6

   14 input: BOOLCONST • $@6 input

    $default  reduce using rule 13 ($@6)

    $@6  go to state 14


State 7

    2 input: '\n' •

    $default  reduce using rule 2 (input)


State 8

    0 $accept: input • $end

    $end  shift, and go to state 15


State 9

    6 input: ID $@2 • input

    ID           shift, and go to state 1
    NUMCONST     shift, and go to state 2
    CHARCONST    shift, and go to state 3
    STRINGCONST  shift, and go to state 4
    OPERAND      shift, and go to state 5
    BOOLCONST    shift, and go to state 6
    '\n'         shift, and go to state 7

    $default  reduce using rule 1 (input)

    input  go to state 16


State 10

    4 input: NUMCONST $@1 • input

    ID           shift, and go to state 1
    NUMCONST     shift, and go to state 2
    CHARCONST    shift, and go to state 3
    STRINGCONST  shift, and go to state 4
    OPERAND      shift, and go to state 5
    BOOLCONST    shift, and go to state 6
    '\n'         shift, and go to state 7

    $default  reduce using rule 1 (input)

    input  go to state 17


State 11

    8 input: CHARCONST $@3 • input

    ID           shift, and go to state 1
    NUMCONST     shift, and go to state 2
    CHARCONST    shift, and go to state 3
    STRINGCONST  shift, and go to state 4
    OPERAND      shift, and go to state 5
    BOOLCONST    shift, and go to state 6
    '\n'         shift, and go to state 7

    $default  reduce using rule 1 (input)

    input  go to state 18


State 12

   10 input: STRINGCONST $@4 • input

    ID           shift, and go to state 1
    NUMCONST     shift, and go to state 2
    CHARCONST    shift, and go to state 3
    STRINGCONST  shift, and go to state 4
    OPERAND      shift, and go to state 5
    BOOLCONST    shift, and go to state 6
    '\n'         shift, and go to state 7

    $default  reduce using rule 1 (input)

    input  go to state 19


State 13

   12 input: OPERAND $@5 • input

    ID           shift, and go to state 1
    NUMCONST     shift, and go to state 2
    CHARCONST    shift, and go to state 3
    STRINGCONST  shift, and go to state 4
    OPERAND      shift, and go to state 5
    BOOLCONST    shift, and go to state 6
    '\n'         shift, and go to state 7

    $default  reduce using rule 1 (input)

    input  go to state 20


State 14

   14 input: BOOLCONST $@6 • input

    ID           shift, and go to state 1
    NUMCONST     shift, and go to state 2
    CHARCONST    shift, and go to state 3
    STRINGCONST  shift, and go to state 4
    OPERAND      shift, and go to state 5
    BOOLCONST    shift, and go to state 6
    '\n'         shift, and go to state 7

    $default  reduce using rule 1 (input)

    input  go to state 21


State 15

    0 $accept: input $end •

    $default  accept


State 16

    6 input: ID $@2 input •

    $default  reduce using rule 6 (input)


State 17

    4 input: NUMCONST $@1 input •

    $default  reduce using rule 4 (input)


State 18

    8 input: CHARCONST $@3 input •

    $default  reduce using rule 8 (input)


State 19

   10 input: STRINGCONST $@4 input •

    $default  reduce using rule 10 (input)


State 20

   12 input: OPERAND $@5 input •

    $default  reduce using rule 12 (input)


State 21

   14 input: BOOLCONST $@6 input •

    $default  reduce using rule 14 (input)
