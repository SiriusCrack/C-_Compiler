Grammar

    0 $accept: program $end

    1 program: declList

    2 declList: declList decl
    3         | decl

    4 decl: varDecl
    5     | funDecl

    6 varDecl: typeSpec varDeclList ';'

    7 scopedVarDecl: ytstatic typeSpec varDeclList ';'
    8              | typeSpec varDeclList ';'

    9 varDeclList: varDeclList ',' varDeclInit
   10            | varDeclInit

   11 varDeclInit: varDeclId
   12            | varDeclId ':' simpleExp

   13 varDeclId: ID
   14          | ID ytarr NUMCONST ']'

   15 typeSpec: ytbool
   16         | ytchar
   17         | ytint

   18 funDecl: typeSpec ID '(' parms ')' compoundStmt
   19        | ID '(' parms ')' compoundStmt

   20 parms: parmList
   21      | ε

   22 parmList: parmList ';' parmTypeList
   23         | parmTypeList

   24 parmTypeList: typeSpec parmIdList

   25 parmIdList: parmIdList ',' parmId
   26           | parmId

   27 parmId: ID
   28       | ID ytarr ']'

   29 stmt: matched
   30     | unmatched

   31 matched: expStmt
   32        | compoundStmt
   33        | matchedSelectStmt
   34        | matchedIterStmt
   35        | returnStmt
   36        | breakStmt

   37 unmatched: unmatchedSelectStmt
   38          | unmatchedIterStmt

   39 expStmt: exp ';'
   40        | ';'

   41 compoundStmt: ytcompound localDecls stmtList '}'

   42 localDecls: localDecls scopedVarDecl
   43           | ε

   44 stmtList: stmtList stmt
   45         | ε

   46 matchedSelectStmt: ytif simpleExp ytthen matched ytelse matched

   47 unmatchedSelectStmt: ytif simpleExp ytthen stmt
   48                    | ytif simpleExp ytthen matched ytelse unmatched

   49 matchedIterStmt: ytwhile simpleExp ytdo matched
   50                | ytfor ID ytequals iterRange ytdo matched

   51 unmatchedIterStmt: ytwhile simpleExp ytdo unmatched
   52                  | ytfor ID ytequals iterRange ytdo unmatched

   53 iterRange: simpleExp ytto simpleExp
   54          | simpleExp ytto simpleExp ytby simpleExp

   55 returnStmt: ytreturn ';'
   56           | ytreturn exp ';'

   57 breakStmt: ytbreak ';'

   58 exp: mutable assignop exp
   59    | mutable ytinc
   60    | mutable ytdec
   61    | simpleExp

   62 assignop: ytequals
   63         | ytassadd
   64         | ytasssub
   65         | ytassmul
   66         | ytassdiv

   67 simpleExp: simpleExp ytor andExp
   68          | andExp

   69 andExp: andExp ytand unaryRelExp
   70       | unaryRelExp

   71 unaryRelExp: ytnot unaryRelExp
   72            | relExp

   73 relExp: sumExp relop sumExp
   74       | sumExp

   75 relop: ytlesser
   76      | yteqlesser
   77      | ytgreater
   78      | yteqgreater
   79      | yteq
   80      | ytnoteq

   81 sumExp: sumExp sumop mulExp
   82       | mulExp

   83 sumop: ytadd
   84      | ytsub

   85 mulExp: mulExp mulop unaryExp
   86       | unaryExp

   87 mulop: ytmul
   88      | ytdiv
   89      | ytmod

   90 unaryExp: unaryop unaryExp
   91         | factor

   92 unaryop: ytsub
   93        | ytmul
   94        | ytquestion

   95 factor: mutable
   96       | immutable

   97 mutable: ID
   98        | ID ytarr exp ']'

   99 immutable: '(' exp ')'
  100          | call
  101          | constant

  102 call: ID '(' args ')'

  103 args: argList
  104     | ε

  105 argList: argList ',' exp
  106        | exp

  107 constant: NUMCONST
  108         | CHARCONST
  109         | STRINGCONST
  110         | BOOLCONST


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 18 19 99 102
    ')' (41) 18 19 99 102
    ',' (44) 9 25 105
    ':' (58) 12
    ';' (59) 6 7 8 22 39 40 55 56 57
    ']' (93) 14 28 98
    '}' (125) 41
    error (256)
    ytint <token> (258) 17
    ytbool <token> (259) 15
    ytchar <token> (260) 16
    ytstatic <token> (261) 7
    ID <token> (262) 13 14 18 19 27 28 50 52 97 98 102
    NUMCONST <token> (263) 14 107
    CHARCONST <token> (264) 108
    STRINGCONST <token> (265) 109
    BOOLCONST <token> (266) 110
    ytequals <token> (267) 50 52 62
    ytadd <token> (268) 83
    ytsub <token> (269) 84 92
    ytmul <token> (270) 87 93
    ytdiv <token> (271) 88
    ytmod <token> (272) 89
    ytassadd <token> (273) 63
    ytasssub <token> (274) 64
    ytassmul <token> (275) 65
    ytassdiv <token> (276) 66
    ytinc <token> (277) 59
    ytdec <token> (278) 60
    ytquestion <token> (279) 94
    ytlesser <token> (280) 75
    ytgreater <token> (281) 77
    yteq <token> (282) 79
    ytnoteq <token> (283) 80
    yteqlesser <token> (284) 76
    yteqgreater <token> (285) 78
    ytif <token> (286) 46 47 48
    ytelse <token> (287) 46 48
    ytwhile <token> (288) 49 51
    ytdo <token> (289) 49 50 51 52
    ytthen <token> (290) 46 47 48
    ytnot <token> (291) 71
    ytand <token> (292) 69
    ytor <token> (293) 67
    ytfor <token> (294) 50 52
    ytto <token> (295) 53 54
    ytby <token> (296) 54
    ytbreak <token> (297) 57
    ytreturn <token> (298) 55 56
    ytcompound <token> (299) 41
    ytarr <token> (300) 14 28 98


Nonterminals, with rules where they appear

    $accept (53)
        on left: 0
    program (54)
        on left: 1
        on right: 0
    declList <nodePtr> (55)
        on left: 2 3
        on right: 1 2
    decl <nodePtr> (56)
        on left: 4 5
        on right: 2 3
    varDecl <nodePtr> (57)
        on left: 6
        on right: 4
    scopedVarDecl <nodePtr> (58)
        on left: 7 8
        on right: 42
    varDeclList <nodePtr> (59)
        on left: 9 10
        on right: 6 7 8 9
    varDeclInit <nodePtr> (60)
        on left: 11 12
        on right: 9 10
    varDeclId <nodePtr> (61)
        on left: 13 14
        on right: 11 12
    typeSpec <literal> (62)
        on left: 15 16 17
        on right: 6 7 8 18 24
    funDecl <nodePtr> (63)
        on left: 18 19
        on right: 5
    parms <nodePtr> (64)
        on left: 20 21
        on right: 18 19
    parmList <nodePtr> (65)
        on left: 22 23
        on right: 20 22
    parmTypeList <nodePtr> (66)
        on left: 24
        on right: 22 23
    parmIdList <nodePtr> (67)
        on left: 25 26
        on right: 24 25
    parmId <nodePtr> (68)
        on left: 27 28
        on right: 25 26
    stmt <nodePtr> (69)
        on left: 29 30
        on right: 44 47
    matched <nodePtr> (70)
        on left: 31 32 33 34 35 36
        on right: 29 46 48 49 50
    unmatched <nodePtr> (71)
        on left: 37 38
        on right: 30 48 51 52
    expStmt <nodePtr> (72)
        on left: 39 40
        on right: 31
    compoundStmt <nodePtr> (73)
        on left: 41
        on right: 18 19 32
    localDecls <nodePtr> (74)
        on left: 42 43
        on right: 41 42
    stmtList <nodePtr> (75)
        on left: 44 45
        on right: 41 44
    matchedSelectStmt <nodePtr> (76)
        on left: 46
        on right: 33
    unmatchedSelectStmt <nodePtr> (77)
        on left: 47 48
        on right: 37
    matchedIterStmt <nodePtr> (78)
        on left: 49 50
        on right: 34
    unmatchedIterStmt <nodePtr> (79)
        on left: 51 52
        on right: 38
    iterRange <nodePtr> (80)
        on left: 53 54
        on right: 50 52
    returnStmt <nodePtr> (81)
        on left: 55 56
        on right: 35
    breakStmt <nodePtr> (82)
        on left: 57
        on right: 36
    exp <nodePtr> (83)
        on left: 58 59 60 61
        on right: 39 56 58 98 99 105 106
    assignop <nodePtr> (84)
        on left: 62 63 64 65 66
        on right: 58
    simpleExp <nodePtr> (85)
        on left: 67 68
        on right: 12 46 47 48 49 51 53 54 61 67
    andExp <nodePtr> (86)
        on left: 69 70
        on right: 67 68 69
    unaryRelExp <nodePtr> (87)
        on left: 71 72
        on right: 69 70 71
    relExp <nodePtr> (88)
        on left: 73 74
        on right: 72
    relop <nodePtr> (89)
        on left: 75 76 77 78 79 80
        on right: 73
    sumExp <nodePtr> (90)
        on left: 81 82
        on right: 73 74 81
    sumop <nodePtr> (91)
        on left: 83 84
        on right: 81
    mulExp <nodePtr> (92)
        on left: 85 86
        on right: 81 82 85
    mulop <nodePtr> (93)
        on left: 87 88 89
        on right: 85
    unaryExp <nodePtr> (94)
        on left: 90 91
        on right: 85 86 90
    unaryop <nodePtr> (95)
        on left: 92 93 94
        on right: 90
    factor <nodePtr> (96)
        on left: 95 96
        on right: 91
    mutable <nodePtr> (97)
        on left: 97 98
        on right: 58 59 60 95
    immutable <nodePtr> (98)
        on left: 99 100 101
        on right: 96
    call <nodePtr> (99)
        on left: 102
        on right: 100
    args <nodePtr> (100)
        on left: 103 104
        on right: 102
    argList <nodePtr> (101)
        on left: 105 106
        on right: 103 105
    constant <nodePtr> (102)
        on left: 107 108 109 110
        on right: 101


State 0

    0 $accept: • program $end

    ytint   shift, and go to state 1
    ytbool  shift, and go to state 2
    ytchar  shift, and go to state 3
    ID      shift, and go to state 4

    program   go to state 5
    declList  go to state 6
    decl      go to state 7
    varDecl   go to state 8
    typeSpec  go to state 9
    funDecl   go to state 10


State 1

   17 typeSpec: ytint •

    $default  reduce using rule 17 (typeSpec)


State 2

   15 typeSpec: ytbool •

    $default  reduce using rule 15 (typeSpec)


State 3

   16 typeSpec: ytchar •

    $default  reduce using rule 16 (typeSpec)


State 4

   19 funDecl: ID • '(' parms ')' compoundStmt

    '('  shift, and go to state 11


State 5

    0 $accept: program • $end

    $end  shift, and go to state 12


State 6

    1 program: declList •
    2 declList: declList • decl

    ytint   shift, and go to state 1
    ytbool  shift, and go to state 2
    ytchar  shift, and go to state 3
    ID      shift, and go to state 4

    $default  reduce using rule 1 (program)

    decl      go to state 13
    varDecl   go to state 8
    typeSpec  go to state 9
    funDecl   go to state 10


State 7

    3 declList: decl •

    $default  reduce using rule 3 (declList)


State 8

    4 decl: varDecl •

    $default  reduce using rule 4 (decl)


State 9

    6 varDecl: typeSpec • varDeclList ';'
   18 funDecl: typeSpec • ID '(' parms ')' compoundStmt

    ID  shift, and go to state 14

    varDeclList  go to state 15
    varDeclInit  go to state 16
    varDeclId    go to state 17


State 10

    5 decl: funDecl •

    $default  reduce using rule 5 (decl)


State 11

   19 funDecl: ID '(' • parms ')' compoundStmt

    ytint   shift, and go to state 1
    ytbool  shift, and go to state 2
    ytchar  shift, and go to state 3

    $default  reduce using rule 21 (parms)

    typeSpec      go to state 18
    parms         go to state 19
    parmList      go to state 20
    parmTypeList  go to state 21


State 12

    0 $accept: program $end •

    $default  accept


State 13

    2 declList: declList decl •

    $default  reduce using rule 2 (declList)


State 14

   13 varDeclId: ID •
   14          | ID • ytarr NUMCONST ']'
   18 funDecl: typeSpec ID • '(' parms ')' compoundStmt

    ytarr  shift, and go to state 22
    '('    shift, and go to state 23

    $default  reduce using rule 13 (varDeclId)


State 15

    6 varDecl: typeSpec varDeclList • ';'
    9 varDeclList: varDeclList • ',' varDeclInit

    ';'  shift, and go to state 24
    ','  shift, and go to state 25


State 16

   10 varDeclList: varDeclInit •

    $default  reduce using rule 10 (varDeclList)


State 17

   11 varDeclInit: varDeclId •
   12            | varDeclId • ':' simpleExp

    ':'  shift, and go to state 26

    $default  reduce using rule 11 (varDeclInit)


State 18

   24 parmTypeList: typeSpec • parmIdList

    ID  shift, and go to state 27

    parmIdList  go to state 28
    parmId      go to state 29


State 19

   19 funDecl: ID '(' parms • ')' compoundStmt

    ')'  shift, and go to state 30


State 20

   20 parms: parmList •
   22 parmList: parmList • ';' parmTypeList

    ';'  shift, and go to state 31

    $default  reduce using rule 20 (parms)


State 21

   23 parmList: parmTypeList •

    $default  reduce using rule 23 (parmList)


State 22

   14 varDeclId: ID ytarr • NUMCONST ']'

    NUMCONST  shift, and go to state 32


State 23

   18 funDecl: typeSpec ID '(' • parms ')' compoundStmt

    ytint   shift, and go to state 1
    ytbool  shift, and go to state 2
    ytchar  shift, and go to state 3

    $default  reduce using rule 21 (parms)

    typeSpec      go to state 18
    parms         go to state 33
    parmList      go to state 20
    parmTypeList  go to state 21


State 24

    6 varDecl: typeSpec varDeclList ';' •

    $default  reduce using rule 6 (varDecl)


State 25

    9 varDeclList: varDeclList ',' • varDeclInit

    ID  shift, and go to state 34

    varDeclInit  go to state 35
    varDeclId    go to state 17


State 26

   12 varDeclInit: varDeclId ':' • simpleExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    ytsub        shift, and go to state 41
    ytmul        shift, and go to state 42
    ytquestion   shift, and go to state 43
    ytnot        shift, and go to state 44
    '('          shift, and go to state 45

    simpleExp    go to state 46
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 27

   27 parmId: ID •
   28       | ID • ytarr ']'

    ytarr  shift, and go to state 59

    $default  reduce using rule 27 (parmId)


State 28

   24 parmTypeList: typeSpec parmIdList •
   25 parmIdList: parmIdList • ',' parmId

    ','  shift, and go to state 60

    $default  reduce using rule 24 (parmTypeList)


State 29

   26 parmIdList: parmId •

    $default  reduce using rule 26 (parmIdList)


State 30

   19 funDecl: ID '(' parms ')' • compoundStmt

    ytcompound  shift, and go to state 61

    compoundStmt  go to state 62


State 31

   22 parmList: parmList ';' • parmTypeList

    ytint   shift, and go to state 1
    ytbool  shift, and go to state 2
    ytchar  shift, and go to state 3

    typeSpec      go to state 18
    parmTypeList  go to state 63


State 32

   14 varDeclId: ID ytarr NUMCONST • ']'

    ']'  shift, and go to state 64


State 33

   18 funDecl: typeSpec ID '(' parms • ')' compoundStmt

    ')'  shift, and go to state 65


State 34

   13 varDeclId: ID •
   14          | ID • ytarr NUMCONST ']'

    ytarr  shift, and go to state 22

    $default  reduce using rule 13 (varDeclId)


State 35

    9 varDeclList: varDeclList ',' varDeclInit •

    $default  reduce using rule 9 (varDeclList)


State 36

   97 mutable: ID •
   98        | ID • ytarr exp ']'
  102 call: ID • '(' args ')'

    ytarr  shift, and go to state 66
    '('    shift, and go to state 67

    $default  reduce using rule 97 (mutable)


State 37

  107 constant: NUMCONST •

    $default  reduce using rule 107 (constant)


State 38

  108 constant: CHARCONST •

    $default  reduce using rule 108 (constant)


State 39

  109 constant: STRINGCONST •

    $default  reduce using rule 109 (constant)


State 40

  110 constant: BOOLCONST •

    $default  reduce using rule 110 (constant)


State 41

   92 unaryop: ytsub •

    $default  reduce using rule 92 (unaryop)


State 42

   93 unaryop: ytmul •

    $default  reduce using rule 93 (unaryop)


State 43

   94 unaryop: ytquestion •

    $default  reduce using rule 94 (unaryop)


State 44

   71 unaryRelExp: ytnot • unaryRelExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    ytsub        shift, and go to state 41
    ytmul        shift, and go to state 42
    ytquestion   shift, and go to state 43
    ytnot        shift, and go to state 44
    '('          shift, and go to state 45

    unaryRelExp  go to state 68
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 45

   99 immutable: '(' • exp ')'

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    ytsub        shift, and go to state 41
    ytmul        shift, and go to state 42
    ytquestion   shift, and go to state 43
    ytnot        shift, and go to state 44
    '('          shift, and go to state 45

    exp          go to state 69
    simpleExp    go to state 70
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 71
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 46

   12 varDeclInit: varDeclId ':' simpleExp •
   67 simpleExp: simpleExp • ytor andExp

    ytor  shift, and go to state 72

    $default  reduce using rule 12 (varDeclInit)


State 47

   68 simpleExp: andExp •
   69 andExp: andExp • ytand unaryRelExp

    ytand  shift, and go to state 73

    $default  reduce using rule 68 (simpleExp)


State 48

   70 andExp: unaryRelExp •

    $default  reduce using rule 70 (andExp)


State 49

   72 unaryRelExp: relExp •

    $default  reduce using rule 72 (unaryRelExp)


State 50

   73 relExp: sumExp • relop sumExp
   74       | sumExp •
   81 sumExp: sumExp • sumop mulExp

    ytadd        shift, and go to state 74
    ytsub        shift, and go to state 75
    ytlesser     shift, and go to state 76
    ytgreater    shift, and go to state 77
    yteq         shift, and go to state 78
    ytnoteq      shift, and go to state 79
    yteqlesser   shift, and go to state 80
    yteqgreater  shift, and go to state 81

    $default  reduce using rule 74 (relExp)

    relop  go to state 82
    sumop  go to state 83


State 51

   82 sumExp: mulExp •
   85 mulExp: mulExp • mulop unaryExp

    ytmul  shift, and go to state 84
    ytdiv  shift, and go to state 85
    ytmod  shift, and go to state 86

    $default  reduce using rule 82 (sumExp)

    mulop  go to state 87


State 52

   86 mulExp: unaryExp •

    $default  reduce using rule 86 (mulExp)


State 53

   90 unaryExp: unaryop • unaryExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    ytsub        shift, and go to state 41
    ytmul        shift, and go to state 42
    ytquestion   shift, and go to state 43
    '('          shift, and go to state 45

    unaryExp   go to state 88
    unaryop    go to state 53
    factor     go to state 54
    mutable    go to state 55
    immutable  go to state 56
    call       go to state 57
    constant   go to state 58


State 54

   91 unaryExp: factor •

    $default  reduce using rule 91 (unaryExp)


State 55

   95 factor: mutable •

    $default  reduce using rule 95 (factor)


State 56

   96 factor: immutable •

    $default  reduce using rule 96 (factor)


State 57

  100 immutable: call •

    $default  reduce using rule 100 (immutable)


State 58

  101 immutable: constant •

    $default  reduce using rule 101 (immutable)


State 59

   28 parmId: ID ytarr • ']'

    ']'  shift, and go to state 89


State 60

   25 parmIdList: parmIdList ',' • parmId

    ID  shift, and go to state 27

    parmId  go to state 90


State 61

   41 compoundStmt: ytcompound • localDecls stmtList '}'

    $default  reduce using rule 43 (localDecls)

    localDecls  go to state 91


State 62

   19 funDecl: ID '(' parms ')' compoundStmt •

    $default  reduce using rule 19 (funDecl)


State 63

   22 parmList: parmList ';' parmTypeList •

    $default  reduce using rule 22 (parmList)


State 64

   14 varDeclId: ID ytarr NUMCONST ']' •

    $default  reduce using rule 14 (varDeclId)


State 65

   18 funDecl: typeSpec ID '(' parms ')' • compoundStmt

    ytcompound  shift, and go to state 61

    compoundStmt  go to state 92


State 66

   98 mutable: ID ytarr • exp ']'

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    ytsub        shift, and go to state 41
    ytmul        shift, and go to state 42
    ytquestion   shift, and go to state 43
    ytnot        shift, and go to state 44
    '('          shift, and go to state 45

    exp          go to state 93
    simpleExp    go to state 70
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 71
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 67

  102 call: ID '(' • args ')'

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    ytsub        shift, and go to state 41
    ytmul        shift, and go to state 42
    ytquestion   shift, and go to state 43
    ytnot        shift, and go to state 44
    '('          shift, and go to state 45

    $default  reduce using rule 104 (args)

    exp          go to state 94
    simpleExp    go to state 70
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 71
    immutable    go to state 56
    call         go to state 57
    args         go to state 95
    argList      go to state 96
    constant     go to state 58


State 68

   71 unaryRelExp: ytnot unaryRelExp •

    $default  reduce using rule 71 (unaryRelExp)


State 69

   99 immutable: '(' exp • ')'

    ')'  shift, and go to state 97


State 70

   61 exp: simpleExp •
   67 simpleExp: simpleExp • ytor andExp

    ytor  shift, and go to state 72

    $default  reduce using rule 61 (exp)


State 71

   58 exp: mutable • assignop exp
   59    | mutable • ytinc
   60    | mutable • ytdec
   95 factor: mutable •

    ytequals  shift, and go to state 98
    ytassadd  shift, and go to state 99
    ytasssub  shift, and go to state 100
    ytassmul  shift, and go to state 101
    ytassdiv  shift, and go to state 102
    ytinc     shift, and go to state 103
    ytdec     shift, and go to state 104

    $default  reduce using rule 95 (factor)

    assignop  go to state 105


State 72

   67 simpleExp: simpleExp ytor • andExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    ytsub        shift, and go to state 41
    ytmul        shift, and go to state 42
    ytquestion   shift, and go to state 43
    ytnot        shift, and go to state 44
    '('          shift, and go to state 45

    andExp       go to state 106
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 73

   69 andExp: andExp ytand • unaryRelExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    ytsub        shift, and go to state 41
    ytmul        shift, and go to state 42
    ytquestion   shift, and go to state 43
    ytnot        shift, and go to state 44
    '('          shift, and go to state 45

    unaryRelExp  go to state 107
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 74

   83 sumop: ytadd •

    $default  reduce using rule 83 (sumop)


State 75

   84 sumop: ytsub •

    $default  reduce using rule 84 (sumop)


State 76

   75 relop: ytlesser •

    $default  reduce using rule 75 (relop)


State 77

   77 relop: ytgreater •

    $default  reduce using rule 77 (relop)


State 78

   79 relop: yteq •

    $default  reduce using rule 79 (relop)


State 79

   80 relop: ytnoteq •

    $default  reduce using rule 80 (relop)


State 80

   76 relop: yteqlesser •

    $default  reduce using rule 76 (relop)


State 81

   78 relop: yteqgreater •

    $default  reduce using rule 78 (relop)


State 82

   73 relExp: sumExp relop • sumExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    ytsub        shift, and go to state 41
    ytmul        shift, and go to state 42
    ytquestion   shift, and go to state 43
    '('          shift, and go to state 45

    sumExp     go to state 108
    mulExp     go to state 51
    unaryExp   go to state 52
    unaryop    go to state 53
    factor     go to state 54
    mutable    go to state 55
    immutable  go to state 56
    call       go to state 57
    constant   go to state 58


State 83

   81 sumExp: sumExp sumop • mulExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    ytsub        shift, and go to state 41
    ytmul        shift, and go to state 42
    ytquestion   shift, and go to state 43
    '('          shift, and go to state 45

    mulExp     go to state 109
    unaryExp   go to state 52
    unaryop    go to state 53
    factor     go to state 54
    mutable    go to state 55
    immutable  go to state 56
    call       go to state 57
    constant   go to state 58


State 84

   87 mulop: ytmul •

    $default  reduce using rule 87 (mulop)


State 85

   88 mulop: ytdiv •

    $default  reduce using rule 88 (mulop)


State 86

   89 mulop: ytmod •

    $default  reduce using rule 89 (mulop)


State 87

   85 mulExp: mulExp mulop • unaryExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    ytsub        shift, and go to state 41
    ytmul        shift, and go to state 42
    ytquestion   shift, and go to state 43
    '('          shift, and go to state 45

    unaryExp   go to state 110
    unaryop    go to state 53
    factor     go to state 54
    mutable    go to state 55
    immutable  go to state 56
    call       go to state 57
    constant   go to state 58


State 88

   90 unaryExp: unaryop unaryExp •

    $default  reduce using rule 90 (unaryExp)


State 89

   28 parmId: ID ytarr ']' •

    $default  reduce using rule 28 (parmId)


State 90

   25 parmIdList: parmIdList ',' parmId •

    $default  reduce using rule 25 (parmIdList)


State 91

   41 compoundStmt: ytcompound localDecls • stmtList '}'
   42 localDecls: localDecls • scopedVarDecl

    ytint     shift, and go to state 1
    ytbool    shift, and go to state 2
    ytchar    shift, and go to state 3
    ytstatic  shift, and go to state 111

    $default  reduce using rule 45 (stmtList)

    scopedVarDecl  go to state 112
    typeSpec       go to state 113
    stmtList       go to state 114


State 92

   18 funDecl: typeSpec ID '(' parms ')' compoundStmt •

    $default  reduce using rule 18 (funDecl)


State 93

   98 mutable: ID ytarr exp • ']'

    ']'  shift, and go to state 115


State 94

  106 argList: exp •

    $default  reduce using rule 106 (argList)


State 95

  102 call: ID '(' args • ')'

    ')'  shift, and go to state 116


State 96

  103 args: argList •
  105 argList: argList • ',' exp

    ','  shift, and go to state 117

    $default  reduce using rule 103 (args)


State 97

   99 immutable: '(' exp ')' •

    $default  reduce using rule 99 (immutable)


State 98

   62 assignop: ytequals •

    $default  reduce using rule 62 (assignop)


State 99

   63 assignop: ytassadd •

    $default  reduce using rule 63 (assignop)


State 100

   64 assignop: ytasssub •

    $default  reduce using rule 64 (assignop)


State 101

   65 assignop: ytassmul •

    $default  reduce using rule 65 (assignop)


State 102

   66 assignop: ytassdiv •

    $default  reduce using rule 66 (assignop)


State 103

   59 exp: mutable ytinc •

    $default  reduce using rule 59 (exp)


State 104

   60 exp: mutable ytdec •

    $default  reduce using rule 60 (exp)


State 105

   58 exp: mutable assignop • exp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    ytsub        shift, and go to state 41
    ytmul        shift, and go to state 42
    ytquestion   shift, and go to state 43
    ytnot        shift, and go to state 44
    '('          shift, and go to state 45

    exp          go to state 118
    simpleExp    go to state 70
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 71
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 106

   67 simpleExp: simpleExp ytor andExp •
   69 andExp: andExp • ytand unaryRelExp

    ytand  shift, and go to state 73

    $default  reduce using rule 67 (simpleExp)


State 107

   69 andExp: andExp ytand unaryRelExp •

    $default  reduce using rule 69 (andExp)


State 108

   73 relExp: sumExp relop sumExp •
   81 sumExp: sumExp • sumop mulExp

    ytadd  shift, and go to state 74
    ytsub  shift, and go to state 75

    $default  reduce using rule 73 (relExp)

    sumop  go to state 83


State 109

   81 sumExp: sumExp sumop mulExp •
   85 mulExp: mulExp • mulop unaryExp

    ytmul  shift, and go to state 84
    ytdiv  shift, and go to state 85
    ytmod  shift, and go to state 86

    $default  reduce using rule 81 (sumExp)

    mulop  go to state 87


State 110

   85 mulExp: mulExp mulop unaryExp •

    $default  reduce using rule 85 (mulExp)


State 111

    7 scopedVarDecl: ytstatic • typeSpec varDeclList ';'

    ytint   shift, and go to state 1
    ytbool  shift, and go to state 2
    ytchar  shift, and go to state 3

    typeSpec  go to state 119


State 112

   42 localDecls: localDecls scopedVarDecl •

    $default  reduce using rule 42 (localDecls)


State 113

    8 scopedVarDecl: typeSpec • varDeclList ';'

    ID  shift, and go to state 34

    varDeclList  go to state 120
    varDeclInit  go to state 16
    varDeclId    go to state 17


State 114

   41 compoundStmt: ytcompound localDecls stmtList • '}'
   44 stmtList: stmtList • stmt

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    ytsub        shift, and go to state 41
    ytmul        shift, and go to state 42
    ytquestion   shift, and go to state 43
    ytif         shift, and go to state 121
    ytwhile      shift, and go to state 122
    ytnot        shift, and go to state 44
    ytfor        shift, and go to state 123
    ytbreak      shift, and go to state 124
    ytreturn     shift, and go to state 125
    ytcompound   shift, and go to state 61
    ';'          shift, and go to state 126
    '('          shift, and go to state 45
    '}'          shift, and go to state 127

    stmt                 go to state 128
    matched              go to state 129
    unmatched            go to state 130
    expStmt              go to state 131
    compoundStmt         go to state 132
    matchedSelectStmt    go to state 133
    unmatchedSelectStmt  go to state 134
    matchedIterStmt      go to state 135
    unmatchedIterStmt    go to state 136
    returnStmt           go to state 137
    breakStmt            go to state 138
    exp                  go to state 139
    simpleExp            go to state 70
    andExp               go to state 47
    unaryRelExp          go to state 48
    relExp               go to state 49
    sumExp               go to state 50
    mulExp               go to state 51
    unaryExp             go to state 52
    unaryop              go to state 53
    factor               go to state 54
    mutable              go to state 71
    immutable            go to state 56
    call                 go to state 57
    constant             go to state 58


State 115

   98 mutable: ID ytarr exp ']' •

    $default  reduce using rule 98 (mutable)


State 116

  102 call: ID '(' args ')' •

    $default  reduce using rule 102 (call)


State 117

  105 argList: argList ',' • exp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    ytsub        shift, and go to state 41
    ytmul        shift, and go to state 42
    ytquestion   shift, and go to state 43
    ytnot        shift, and go to state 44
    '('          shift, and go to state 45

    exp          go to state 140
    simpleExp    go to state 70
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 71
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 118

   58 exp: mutable assignop exp •

    $default  reduce using rule 58 (exp)


State 119

    7 scopedVarDecl: ytstatic typeSpec • varDeclList ';'

    ID  shift, and go to state 34

    varDeclList  go to state 141
    varDeclInit  go to state 16
    varDeclId    go to state 17


State 120

    8 scopedVarDecl: typeSpec varDeclList • ';'
    9 varDeclList: varDeclList • ',' varDeclInit

    ';'  shift, and go to state 142
    ','  shift, and go to state 25


State 121

   46 matchedSelectStmt: ytif • simpleExp ytthen matched ytelse matched
   47 unmatchedSelectStmt: ytif • simpleExp ytthen stmt
   48                    | ytif • simpleExp ytthen matched ytelse unmatched

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    ytsub        shift, and go to state 41
    ytmul        shift, and go to state 42
    ytquestion   shift, and go to state 43
    ytnot        shift, and go to state 44
    '('          shift, and go to state 45

    simpleExp    go to state 143
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 122

   49 matchedIterStmt: ytwhile • simpleExp ytdo matched
   51 unmatchedIterStmt: ytwhile • simpleExp ytdo unmatched

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    ytsub        shift, and go to state 41
    ytmul        shift, and go to state 42
    ytquestion   shift, and go to state 43
    ytnot        shift, and go to state 44
    '('          shift, and go to state 45

    simpleExp    go to state 144
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 123

   50 matchedIterStmt: ytfor • ID ytequals iterRange ytdo matched
   52 unmatchedIterStmt: ytfor • ID ytequals iterRange ytdo unmatched

    ID  shift, and go to state 145


State 124

   57 breakStmt: ytbreak • ';'

    ';'  shift, and go to state 146


State 125

   55 returnStmt: ytreturn • ';'
   56           | ytreturn • exp ';'

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    ytsub        shift, and go to state 41
    ytmul        shift, and go to state 42
    ytquestion   shift, and go to state 43
    ytnot        shift, and go to state 44
    ';'          shift, and go to state 147
    '('          shift, and go to state 45

    exp          go to state 148
    simpleExp    go to state 70
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 71
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 126

   40 expStmt: ';' •

    $default  reduce using rule 40 (expStmt)


State 127

   41 compoundStmt: ytcompound localDecls stmtList '}' •

    $default  reduce using rule 41 (compoundStmt)


State 128

   44 stmtList: stmtList stmt •

    $default  reduce using rule 44 (stmtList)


State 129

   29 stmt: matched •

    $default  reduce using rule 29 (stmt)


State 130

   30 stmt: unmatched •

    $default  reduce using rule 30 (stmt)


State 131

   31 matched: expStmt •

    $default  reduce using rule 31 (matched)


State 132

   32 matched: compoundStmt •

    $default  reduce using rule 32 (matched)


State 133

   33 matched: matchedSelectStmt •

    $default  reduce using rule 33 (matched)


State 134

   37 unmatched: unmatchedSelectStmt •

    $default  reduce using rule 37 (unmatched)


State 135

   34 matched: matchedIterStmt •

    $default  reduce using rule 34 (matched)


State 136

   38 unmatched: unmatchedIterStmt •

    $default  reduce using rule 38 (unmatched)


State 137

   35 matched: returnStmt •

    $default  reduce using rule 35 (matched)


State 138

   36 matched: breakStmt •

    $default  reduce using rule 36 (matched)


State 139

   39 expStmt: exp • ';'

    ';'  shift, and go to state 149


State 140

  105 argList: argList ',' exp •

    $default  reduce using rule 105 (argList)


State 141

    7 scopedVarDecl: ytstatic typeSpec varDeclList • ';'
    9 varDeclList: varDeclList • ',' varDeclInit

    ';'  shift, and go to state 150
    ','  shift, and go to state 25


State 142

    8 scopedVarDecl: typeSpec varDeclList ';' •

    $default  reduce using rule 8 (scopedVarDecl)


State 143

   46 matchedSelectStmt: ytif simpleExp • ytthen matched ytelse matched
   47 unmatchedSelectStmt: ytif simpleExp • ytthen stmt
   48                    | ytif simpleExp • ytthen matched ytelse unmatched
   67 simpleExp: simpleExp • ytor andExp

    ytthen  shift, and go to state 151
    ytor    shift, and go to state 72


State 144

   49 matchedIterStmt: ytwhile simpleExp • ytdo matched
   51 unmatchedIterStmt: ytwhile simpleExp • ytdo unmatched
   67 simpleExp: simpleExp • ytor andExp

    ytdo  shift, and go to state 152
    ytor  shift, and go to state 72


State 145

   50 matchedIterStmt: ytfor ID • ytequals iterRange ytdo matched
   52 unmatchedIterStmt: ytfor ID • ytequals iterRange ytdo unmatched

    ytequals  shift, and go to state 153


State 146

   57 breakStmt: ytbreak ';' •

    $default  reduce using rule 57 (breakStmt)


State 147

   55 returnStmt: ytreturn ';' •

    $default  reduce using rule 55 (returnStmt)


State 148

   56 returnStmt: ytreturn exp • ';'

    ';'  shift, and go to state 154


State 149

   39 expStmt: exp ';' •

    $default  reduce using rule 39 (expStmt)


State 150

    7 scopedVarDecl: ytstatic typeSpec varDeclList ';' •

    $default  reduce using rule 7 (scopedVarDecl)


State 151

   46 matchedSelectStmt: ytif simpleExp ytthen • matched ytelse matched
   47 unmatchedSelectStmt: ytif simpleExp ytthen • stmt
   48                    | ytif simpleExp ytthen • matched ytelse unmatched

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    ytsub        shift, and go to state 41
    ytmul        shift, and go to state 42
    ytquestion   shift, and go to state 43
    ytif         shift, and go to state 121
    ytwhile      shift, and go to state 122
    ytnot        shift, and go to state 44
    ytfor        shift, and go to state 123
    ytbreak      shift, and go to state 124
    ytreturn     shift, and go to state 125
    ytcompound   shift, and go to state 61
    ';'          shift, and go to state 126
    '('          shift, and go to state 45

    stmt                 go to state 155
    matched              go to state 156
    unmatched            go to state 130
    expStmt              go to state 131
    compoundStmt         go to state 132
    matchedSelectStmt    go to state 133
    unmatchedSelectStmt  go to state 134
    matchedIterStmt      go to state 135
    unmatchedIterStmt    go to state 136
    returnStmt           go to state 137
    breakStmt            go to state 138
    exp                  go to state 139
    simpleExp            go to state 70
    andExp               go to state 47
    unaryRelExp          go to state 48
    relExp               go to state 49
    sumExp               go to state 50
    mulExp               go to state 51
    unaryExp             go to state 52
    unaryop              go to state 53
    factor               go to state 54
    mutable              go to state 71
    immutable            go to state 56
    call                 go to state 57
    constant             go to state 58


State 152

   49 matchedIterStmt: ytwhile simpleExp ytdo • matched
   51 unmatchedIterStmt: ytwhile simpleExp ytdo • unmatched

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    ytsub        shift, and go to state 41
    ytmul        shift, and go to state 42
    ytquestion   shift, and go to state 43
    ytif         shift, and go to state 121
    ytwhile      shift, and go to state 122
    ytnot        shift, and go to state 44
    ytfor        shift, and go to state 123
    ytbreak      shift, and go to state 124
    ytreturn     shift, and go to state 125
    ytcompound   shift, and go to state 61
    ';'          shift, and go to state 126
    '('          shift, and go to state 45

    matched              go to state 157
    unmatched            go to state 158
    expStmt              go to state 131
    compoundStmt         go to state 132
    matchedSelectStmt    go to state 133
    unmatchedSelectStmt  go to state 134
    matchedIterStmt      go to state 135
    unmatchedIterStmt    go to state 136
    returnStmt           go to state 137
    breakStmt            go to state 138
    exp                  go to state 139
    simpleExp            go to state 70
    andExp               go to state 47
    unaryRelExp          go to state 48
    relExp               go to state 49
    sumExp               go to state 50
    mulExp               go to state 51
    unaryExp             go to state 52
    unaryop              go to state 53
    factor               go to state 54
    mutable              go to state 71
    immutable            go to state 56
    call                 go to state 57
    constant             go to state 58


State 153

   50 matchedIterStmt: ytfor ID ytequals • iterRange ytdo matched
   52 unmatchedIterStmt: ytfor ID ytequals • iterRange ytdo unmatched

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    ytsub        shift, and go to state 41
    ytmul        shift, and go to state 42
    ytquestion   shift, and go to state 43
    ytnot        shift, and go to state 44
    '('          shift, and go to state 45

    iterRange    go to state 159
    simpleExp    go to state 160
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 154

   56 returnStmt: ytreturn exp ';' •

    $default  reduce using rule 56 (returnStmt)


State 155

   47 unmatchedSelectStmt: ytif simpleExp ytthen stmt •

    $default  reduce using rule 47 (unmatchedSelectStmt)


State 156

   29 stmt: matched •
   46 matchedSelectStmt: ytif simpleExp ytthen matched • ytelse matched
   48 unmatchedSelectStmt: ytif simpleExp ytthen matched • ytelse unmatched

    ytelse  shift, and go to state 161

    $default  reduce using rule 29 (stmt)


State 157

   49 matchedIterStmt: ytwhile simpleExp ytdo matched •

    $default  reduce using rule 49 (matchedIterStmt)


State 158

   51 unmatchedIterStmt: ytwhile simpleExp ytdo unmatched •

    $default  reduce using rule 51 (unmatchedIterStmt)


State 159

   50 matchedIterStmt: ytfor ID ytequals iterRange • ytdo matched
   52 unmatchedIterStmt: ytfor ID ytequals iterRange • ytdo unmatched

    ytdo  shift, and go to state 162


State 160

   53 iterRange: simpleExp • ytto simpleExp
   54          | simpleExp • ytto simpleExp ytby simpleExp
   67 simpleExp: simpleExp • ytor andExp

    ytor  shift, and go to state 72
    ytto  shift, and go to state 163


State 161

   46 matchedSelectStmt: ytif simpleExp ytthen matched ytelse • matched
   48 unmatchedSelectStmt: ytif simpleExp ytthen matched ytelse • unmatched

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    ytsub        shift, and go to state 41
    ytmul        shift, and go to state 42
    ytquestion   shift, and go to state 43
    ytif         shift, and go to state 121
    ytwhile      shift, and go to state 122
    ytnot        shift, and go to state 44
    ytfor        shift, and go to state 123
    ytbreak      shift, and go to state 124
    ytreturn     shift, and go to state 125
    ytcompound   shift, and go to state 61
    ';'          shift, and go to state 126
    '('          shift, and go to state 45

    matched              go to state 164
    unmatched            go to state 165
    expStmt              go to state 131
    compoundStmt         go to state 132
    matchedSelectStmt    go to state 133
    unmatchedSelectStmt  go to state 134
    matchedIterStmt      go to state 135
    unmatchedIterStmt    go to state 136
    returnStmt           go to state 137
    breakStmt            go to state 138
    exp                  go to state 139
    simpleExp            go to state 70
    andExp               go to state 47
    unaryRelExp          go to state 48
    relExp               go to state 49
    sumExp               go to state 50
    mulExp               go to state 51
    unaryExp             go to state 52
    unaryop              go to state 53
    factor               go to state 54
    mutable              go to state 71
    immutable            go to state 56
    call                 go to state 57
    constant             go to state 58


State 162

   50 matchedIterStmt: ytfor ID ytequals iterRange ytdo • matched
   52 unmatchedIterStmt: ytfor ID ytequals iterRange ytdo • unmatched

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    ytsub        shift, and go to state 41
    ytmul        shift, and go to state 42
    ytquestion   shift, and go to state 43
    ytif         shift, and go to state 121
    ytwhile      shift, and go to state 122
    ytnot        shift, and go to state 44
    ytfor        shift, and go to state 123
    ytbreak      shift, and go to state 124
    ytreturn     shift, and go to state 125
    ytcompound   shift, and go to state 61
    ';'          shift, and go to state 126
    '('          shift, and go to state 45

    matched              go to state 166
    unmatched            go to state 167
    expStmt              go to state 131
    compoundStmt         go to state 132
    matchedSelectStmt    go to state 133
    unmatchedSelectStmt  go to state 134
    matchedIterStmt      go to state 135
    unmatchedIterStmt    go to state 136
    returnStmt           go to state 137
    breakStmt            go to state 138
    exp                  go to state 139
    simpleExp            go to state 70
    andExp               go to state 47
    unaryRelExp          go to state 48
    relExp               go to state 49
    sumExp               go to state 50
    mulExp               go to state 51
    unaryExp             go to state 52
    unaryop              go to state 53
    factor               go to state 54
    mutable              go to state 71
    immutable            go to state 56
    call                 go to state 57
    constant             go to state 58


State 163

   53 iterRange: simpleExp ytto • simpleExp
   54          | simpleExp ytto • simpleExp ytby simpleExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    ytsub        shift, and go to state 41
    ytmul        shift, and go to state 42
    ytquestion   shift, and go to state 43
    ytnot        shift, and go to state 44
    '('          shift, and go to state 45

    simpleExp    go to state 168
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 164

   46 matchedSelectStmt: ytif simpleExp ytthen matched ytelse matched •

    $default  reduce using rule 46 (matchedSelectStmt)


State 165

   48 unmatchedSelectStmt: ytif simpleExp ytthen matched ytelse unmatched •

    $default  reduce using rule 48 (unmatchedSelectStmt)


State 166

   50 matchedIterStmt: ytfor ID ytequals iterRange ytdo matched •

    $default  reduce using rule 50 (matchedIterStmt)


State 167

   52 unmatchedIterStmt: ytfor ID ytequals iterRange ytdo unmatched •

    $default  reduce using rule 52 (unmatchedIterStmt)


State 168

   53 iterRange: simpleExp ytto simpleExp •
   54          | simpleExp ytto simpleExp • ytby simpleExp
   67 simpleExp: simpleExp • ytor andExp

    ytor  shift, and go to state 72
    ytby  shift, and go to state 169

    $default  reduce using rule 53 (iterRange)


State 169

   54 iterRange: simpleExp ytto simpleExp ytby • simpleExp

    ID           shift, and go to state 36
    NUMCONST     shift, and go to state 37
    CHARCONST    shift, and go to state 38
    STRINGCONST  shift, and go to state 39
    BOOLCONST    shift, and go to state 40
    ytsub        shift, and go to state 41
    ytmul        shift, and go to state 42
    ytquestion   shift, and go to state 43
    ytnot        shift, and go to state 44
    '('          shift, and go to state 45

    simpleExp    go to state 170
    andExp       go to state 47
    unaryRelExp  go to state 48
    relExp       go to state 49
    sumExp       go to state 50
    mulExp       go to state 51
    unaryExp     go to state 52
    unaryop      go to state 53
    factor       go to state 54
    mutable      go to state 55
    immutable    go to state 56
    call         go to state 57
    constant     go to state 58


State 170

   54 iterRange: simpleExp ytto simpleExp ytby simpleExp •
   67 simpleExp: simpleExp • ytor andExp

    ytor  shift, and go to state 72

    $default  reduce using rule 54 (iterRange)
